# Generated by Django 5.0.14 on 2025-05-31 14:18

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_componente', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('unidade_medida', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'COMPONENTES',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, default=None, max_length=150, null=True, unique=True, verbose_name='Nome de Usuário (opcional)')),
                ('nome_completo', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('tipo_usuario', models.CharField(choices=[('Receita Federal', 'Receita Federal'), ('Instituicao', 'Instituição'), ('Publico', 'Público')], default='Publico', max_length=50)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='usuario_set', related_query_name='usuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuario_set', related_query_name='usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'USUARIOS',
            },
        ),
        migrations.CreateModel(
            name='EstoqueComponente',
            fields=[
                ('id_componente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.componente')),
                ('quantidade_total', models.IntegerField(default=0)),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ESTOQUE_COMPONENTES',
            },
        ),
        migrations.CreateModel(
            name='HistoricoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_movimento', models.CharField(choices=[('Entrada', 'Entrada'), ('Saida', 'Saída'), ('Ajuste', 'Ajuste')], max_length=50)),
                ('quantidade_movimentada', models.IntegerField()),
                ('data_movimento', models.DateTimeField(auto_now_add=True)),
                ('id_referencia_origem', models.IntegerField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('id_componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.componente')),
            ],
            options={
                'db_table': 'HISTORICO_ESTOQUE',
            },
        ),
        migrations.CreateModel(
            name='Instituicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_instituicao', models.CharField(max_length=255, unique=True)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('endereco', models.CharField(max_length=255)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email_contato', models.EmailField(blank=True, max_length=254, null=True)),
                ('area_atuacao', models.TextField()),
                ('status_cadastro', models.CharField(choices=[('Pendente', 'Pendente'), ('Aprovado', 'Aprovado'), ('Rejeitado', 'Rejeitado')], default='Pendente', max_length=50)),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('id_usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_usuario_aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='instituicoes_aprovadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'INSTITUICOES',
            },
        ),
        migrations.CreateModel(
            name='Requisicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_requisicao', models.DateTimeField(auto_now_add=True)),
                ('status_requisicao', models.CharField(choices=[('Pendente', 'Pendente'), ('Aprovada', 'Aprovada'), ('Rejeitada', 'Rejeitada'), ('Atendida', 'Atendida'), ('Cancelada', 'Cancelada')], default='Pendente', max_length=50)),
                ('finalidade_projeto', models.TextField()),
                ('observacoes_receita', models.TextField(blank=True, null=True)),
                ('data_analise', models.DateTimeField(blank=True, null=True)),
                ('id_instituicao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.instituicao')),
                ('id_usuario_analise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requisicoes_analisadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'REQUISICOES',
            },
        ),
        migrations.CreateModel(
            name='Vape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vape', models.CharField(max_length=100)),
                ('marca', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo', models.CharField(blank=True, max_length=100, null=True)),
                ('quantidade', models.IntegerField()),
                ('data_apreensao', models.DateField()),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('id_usuario_cadastro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'VAPES',
            },
        ),
        migrations.CreateModel(
            name='ItemRequisicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_solicitada', models.IntegerField()),
                ('id_componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.componente')),
                ('id_requisicao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='api.requisicao')),
            ],
            options={
                'db_table': 'ITENS_REQUISICAO',
                'unique_together': {('id_requisicao', 'id_componente')},
            },
        ),
        migrations.CreateModel(
            name='VapeComponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_por_vape', models.IntegerField()),
                ('id_componente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.componente')),
                ('id_vape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vape')),
            ],
            options={
                'db_table': 'VAPE_COMPONENTE',
                'unique_together': {('id_vape', 'id_componente')},
            },
        ),
    ]
